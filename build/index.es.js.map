{"version":3,"file":"index.es.js","sources":["../compiled/hooks/useLottie.js","../compiled/components/Lottie.js","../compiled/index.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport lottie from \"lottie-web\";\nconst useLottie = (props, style = {}) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, } = props;\n    const animationInstanceRef = useRef(null);\n    const animationContainer = useRef(null);\n    /*\n        ======================================\n            INTERACTION METHODS\n        ======================================\n     */\n    /**\n     * Play\n     * TODO: complete\n     */\n    const play = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.play();\n        }\n    };\n    /**\n     * Stop\n     * TODO: complete\n     */\n    const stop = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.stop();\n        }\n    };\n    /**\n     * Pause\n     * TODO: complete\n     */\n    const pause = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.pause();\n        }\n    };\n    /**\n     * Set animation speed\n     * TODO: complete\n     * @param speed\n     */\n    const setSpeed = (speed) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSpeed(speed);\n        }\n    };\n    /**\n     * Got to frame and play\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndPlay(value, isFrame);\n        }\n    };\n    /**\n     * Got to frame and stop\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndStop(value, isFrame);\n        }\n    };\n    /**\n     * Set animation direction\n     * TODO: complete\n     * @param direction\n     */\n    const setDirection = (direction) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setDirection(direction);\n        }\n    };\n    /**\n     * Play animation segments\n     * TODO: complete\n     * @param segment\n     * @param force\n     */\n    const playSegments = (segment, force) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.playSegments(segment, force);\n        }\n    };\n    /**\n     * Set sub frames\n     * TODO: complete\n     * @param useSubFrames\n     */\n    const setSubframe = (useSubFrames) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSubframe(useSubFrames);\n        }\n    };\n    /**\n     * Destroy animation\n     * TODO: complete\n     */\n    const destroy = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n    };\n    /**\n     * Get animation duration\n     * TODO: complete\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => {\n        if (animationInstanceRef.current) {\n            return animationInstanceRef.current.getDuration(inFrames);\n        }\n        return undefined;\n    };\n    /*\n        ======================================\n            LOTTIE\n        ======================================\n     */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forceOptions\n     */\n    const loadAnimation = (forceOptions = {}) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n        const config = {\n            animationData: animationData || null,\n            loop: !Number.isNaN(loop) ? loop : loop !== false,\n            autoplay: autoplay !== false,\n            initialSegment: initialSegment || null,\n            ...props,\n            ...forceOptions,\n            container: animationContainer.current,\n        };\n        animationInstanceRef.current = lottie.loadAnimation(config);\n    };\n    /**\n     * Initialize and listen for changes that need to reinitialize Lottie\n     */\n    useEffect(() => {\n        loadAnimation();\n    }, [animationData, loop, autoplay, initialSegment]);\n    /*\n        ======================================\n            EVENTS\n        ======================================\n     */\n    /**\n     * Handle the process of adding an event listener\n     * @param {String} eventName\n     * @param {Function} eventHandler\n     * @param {Boolean} removePreviousListeners\n     * @return {Function} Function that deregister the listener\n     */\n    const addEventListenerHelper = (eventName, eventHandler, removePreviousListeners = false) => {\n        if (animationInstanceRef.current) {\n            if (removePreviousListeners) {\n                animationInstanceRef.current.removeEventListener(eventName);\n            }\n            if (eventName && eventHandler) {\n                animationInstanceRef.current.addEventListener(eventName, eventHandler);\n                // Return a function to deregister the event\n                return () => {\n                    // TODO: Should we remove all the listeners?\n                    animationInstanceRef.current.removeEventListener(eventName, eventHandler);\n                };\n            }\n        }\n        return () => { };\n    };\n    /**\n     * Reinitialize listener on change\n     */\n    useEffect(() => {\n        const listeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const deregisterList = listeners.map((event) => addEventListenerHelper(event.name, event.handler));\n        // Deregister events on unmount\n        return () => {\n            deregisterList.forEach((deregister) => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * ALPHA\n     */\n    // Detect changes of the loop param and change it without reloading the animation\n    // TODO: needs intensive testing\n    // useEffect(() => {\n    // \tif (animationInstanceRef.current.loop !== loop) {\n    // \t\tanimationInstanceRef.current.loop = loop;\n    // \t}\n    //\n    // \t// // TODO: decide if this is a desired behavior\n    // \t// if (animationInstanceRef.current.isPaused) {\n    // \t// \tanimationInstanceRef.current.play();\n    // \t// }\n    // }, [loop]);\n    /**\n     * Build the animation view\n     */\n    const View = <div style={style} ref={animationContainer}/>;\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        destroy,\n        getDuration,\n    };\n};\nexport default useLottie;\n","import { forwardRef, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useLottie from \"../hooks/useLottie\";\nconst Lottie = forwardRef((props, ref) => {\n    const { style, ...lottieProps } = props;\n    const parentRef = ref || useRef();\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    const { View, play, stop, pause, setSpeed, goToAndStop, goToAndPlay, setDirection, playSegments, setSubframe, destroy, getDuration, } = useLottie(lottieProps, style);\n    /**\n     * Share methods which control Lottie to the parent component\n     */\n    useEffect(() => {\n        if (parentRef) {\n            parentRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                destroy,\n                getDuration,\n            };\n        }\n    }, [parentRef.current]);\n    return View;\n});\nLottie.propTypes = {\n    animationData: PropTypes.shape(undefined).isRequired,\n    loop: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    autoplay: PropTypes.bool,\n    initialSegment: PropTypes.arrayOf(PropTypes.shape(PropTypes.number.isRequired)),\n    onComplete: PropTypes.func,\n    onLoopComplete: PropTypes.func,\n    onEnterFrame: PropTypes.func,\n    onSegmentStart: PropTypes.func,\n    onConfigReady: PropTypes.func,\n    onDataReady: PropTypes.func,\n    onDataFailed: PropTypes.func,\n    onLoadedImages: PropTypes.func,\n    onDOMLoaded: PropTypes.func,\n    onDestroy: PropTypes.func,\n    style: PropTypes.shape(undefined),\n};\nLottie.defaultProps = {\n    loop: true,\n    autoplay: true,\n    initialSegment: null,\n    onComplete: null,\n    onLoopComplete: null,\n    onEnterFrame: null,\n    onSegmentStart: null,\n    onConfigReady: null,\n    onDataReady: null,\n    onDataFailed: null,\n    onLoadedImages: null,\n    onDOMLoaded: null,\n    onDestroy: null,\n    style: null,\n};\nexport default Lottie;\n","import Lottie from \"./components/Lottie\";\nimport useLottie from \"./hooks/useLottie\";\n// TODO: For backward compatibility, remove on v2\nexport const Animator = Lottie;\nexport const useAnimator = useLottie;\nexport { useLottie };\nexport default Lottie;\n"],"names":["useLottie","props","style","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","animationInstanceRef","useRef","animationContainer","play","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segment","force","setSubframe","useSubFrames","destroy","getDuration","inFrames","undefined","loadAnimation","forceOptions","config","Number","isNaN","container","lottie","useEffect","addEventListenerHelper","eventName","eventHandler","removePreviousListeners","removeEventListener","addEventListener","listeners","name","handler","deregisterList","map","event","forEach","deregister","View","Lottie","forwardRef","ref","lottieProps","parentRef","propTypes","PropTypes","shape","isRequired","oneOfType","bool","number","arrayOf","func","defaultProps","Animator","useAnimator"],"mappings":"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"}