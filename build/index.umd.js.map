{"version":3,"file":"index.umd.js","sources":["../compiled/hooks/useLottie.js","../compiled/components/Lottie.js","../compiled/index.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport lottie from \"lottie-web\";\nconst useLottie = (props, style = {}) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, } = props;\n    const animationInstanceRef = useRef(null);\n    const animationContainer = useRef(null);\n    /*\n        ======================================\n            INTERACTION METHODS\n        ======================================\n     */\n    /**\n     * Play\n     * TODO: complete\n     */\n    const play = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.play();\n        }\n    };\n    /**\n     * Stop\n     * TODO: complete\n     */\n    const stop = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.stop();\n        }\n    };\n    /**\n     * Pause\n     * TODO: complete\n     */\n    const pause = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.pause();\n        }\n    };\n    /**\n     * Set animation speed\n     * TODO: complete\n     * @param speed\n     */\n    const setSpeed = (speed) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSpeed(speed);\n        }\n    };\n    /**\n     * Got to frame and play\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndPlay(value, isFrame);\n        }\n    };\n    /**\n     * Got to frame and stop\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndStop(value, isFrame);\n        }\n    };\n    /**\n     * Set animation direction\n     * TODO: complete\n     * @param direction\n     */\n    const setDirection = (direction) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setDirection(direction);\n        }\n    };\n    /**\n     * Play animation segments\n     * TODO: complete\n     * @param segment\n     * @param force\n     */\n    const playSegments = (segment, force) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.playSegments(segment, force);\n        }\n    };\n    /**\n     * Set sub frames\n     * TODO: complete\n     * @param useSubFrames\n     */\n    const setSubframe = (useSubFrames) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSubframe(useSubFrames);\n        }\n    };\n    /**\n     * Destroy animation\n     * TODO: complete\n     */\n    const destroy = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n    };\n    /**\n     * Get animation duration\n     * TODO: complete\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => {\n        if (animationInstanceRef.current) {\n            return animationInstanceRef.current.getDuration(inFrames);\n        }\n        return undefined;\n    };\n    /*\n        ======================================\n            LOTTIE\n        ======================================\n     */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forceOptions\n     */\n    const loadAnimation = (forceOptions = {}) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n        const config = {\n            animationData: animationData || null,\n            loop: !Number.isNaN(loop) ? loop : loop !== false,\n            autoplay: autoplay !== false,\n            initialSegment: initialSegment || null,\n            ...props,\n            ...forceOptions,\n            container: animationContainer.current,\n        };\n        animationInstanceRef.current = lottie.loadAnimation(config);\n    };\n    /**\n     * Initialize and listen for changes that need to reinitialize Lottie\n     */\n    useEffect(() => {\n        loadAnimation();\n    }, [animationData, loop, autoplay, initialSegment]);\n    /*\n        ======================================\n            EVENTS\n        ======================================\n     */\n    /**\n     * Handle the process of adding an event listener\n     * @param {String} eventName\n     * @param {Function} eventHandler\n     * @param {Boolean} removePreviousListeners\n     * @return {Function} Function that deregister the listener\n     */\n    const addEventListenerHelper = (eventName, eventHandler, removePreviousListeners = false) => {\n        if (animationInstanceRef.current) {\n            if (removePreviousListeners) {\n                animationInstanceRef.current.removeEventListener(eventName);\n            }\n            if (eventName && eventHandler) {\n                animationInstanceRef.current.addEventListener(eventName, eventHandler);\n                // Return a function to deregister the event\n                return () => {\n                    // TODO: Should we remove all the listeners?\n                    animationInstanceRef.current.removeEventListener(eventName, eventHandler);\n                };\n            }\n        }\n        return () => { };\n    };\n    /**\n     * Reinitialize listener on change\n     */\n    useEffect(() => {\n        const listeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const deregisterList = listeners.map((event) => addEventListenerHelper(event.name, event.handler));\n        // Deregister events on unmount\n        return () => {\n            deregisterList.forEach((deregister) => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * ALPHA\n     */\n    // Detect changes of the loop param and change it without reloading the animation\n    // TODO: needs intensive testing\n    // useEffect(() => {\n    // \tif (animationInstanceRef.current.loop !== loop) {\n    // \t\tanimationInstanceRef.current.loop = loop;\n    // \t}\n    //\n    // \t// // TODO: decide if this is a desired behavior\n    // \t// if (animationInstanceRef.current.isPaused) {\n    // \t// \tanimationInstanceRef.current.play();\n    // \t// }\n    // }, [loop]);\n    /**\n     * Build the animation view\n     */\n    const View = <div style={style} ref={animationContainer}/>;\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        destroy,\n        getDuration,\n    };\n};\nexport default useLottie;\n","import { forwardRef, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useLottie from \"../hooks/useLottie\";\nconst Lottie = forwardRef((props, ref) => {\n    const { style, ...lottieProps } = props;\n    const parentRef = ref || useRef();\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    const { View, play, stop, pause, setSpeed, goToAndStop, goToAndPlay, setDirection, playSegments, setSubframe, destroy, getDuration, } = useLottie(lottieProps, style);\n    /**\n     * Share methods which control Lottie to the parent component\n     */\n    useEffect(() => {\n        if (parentRef) {\n            parentRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                destroy,\n                getDuration,\n            };\n        }\n    }, [parentRef.current]);\n    return View;\n});\nLottie.propTypes = {\n    animationData: PropTypes.shape(undefined).isRequired,\n    loop: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    autoplay: PropTypes.bool,\n    initialSegment: PropTypes.arrayOf(PropTypes.shape(PropTypes.number.isRequired)),\n    onComplete: PropTypes.func,\n    onLoopComplete: PropTypes.func,\n    onEnterFrame: PropTypes.func,\n    onSegmentStart: PropTypes.func,\n    onConfigReady: PropTypes.func,\n    onDataReady: PropTypes.func,\n    onDataFailed: PropTypes.func,\n    onLoadedImages: PropTypes.func,\n    onDOMLoaded: PropTypes.func,\n    onDestroy: PropTypes.func,\n    style: PropTypes.shape(undefined),\n};\nLottie.defaultProps = {\n    loop: true,\n    autoplay: true,\n    initialSegment: null,\n    onComplete: null,\n    onLoopComplete: null,\n    onEnterFrame: null,\n    onSegmentStart: null,\n    onConfigReady: null,\n    onDataReady: null,\n    onDataFailed: null,\n    onLoadedImages: null,\n    onDOMLoaded: null,\n    onDestroy: null,\n    style: null,\n};\nexport default Lottie;\n","import Lottie from \"./components/Lottie\";\nimport useLottie from \"./hooks/useLottie\";\n// TODO: For backward compatibility, remove on v2\nexport const Animator = Lottie;\nexport const useAnimator = useLottie;\nexport { useLottie };\nexport default Lottie;\n"],"names":["useLottie","props","style","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","animationInstanceRef","useRef","animationContainer","play","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segment","force","setSubframe","useSubFrames","destroy","getDuration","inFrames","undefined","loadAnimation","forceOptions","config","Number","isNaN","container","lottie","useEffect","addEventListenerHelper","eventName","eventHandler","removePreviousListeners","removeEventListener","addEventListener","listeners","name","handler","deregisterList","map","event","forEach","deregister","View","React","Lottie","forwardRef","ref","lottieProps","parentRef","propTypes","PropTypes","shape","isRequired","oneOfType","bool","number","arrayOf","func","defaultProps","Animator","useAnimator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAuB;EAAA,MAAfC,KAAe,uEAAP,EAAO;EAAA,MAC7BC,aAD6B,GACkKF,KADlK,CAC7BE,aAD6B;EAAA,MACdC,IADc,GACkKH,KADlK,CACdG,IADc;EAAA,MACRC,QADQ,GACkKJ,KADlK,CACRI,QADQ;EAAA,MACEC,cADF,GACkKL,KADlK,CACEK,cADF;EAAA,MACkBC,UADlB,GACkKN,KADlK,CACkBM,UADlB;EAAA,MAC8BC,cAD9B,GACkKP,KADlK,CAC8BO,cAD9B;EAAA,MAC8CC,YAD9C,GACkKR,KADlK,CAC8CQ,YAD9C;EAAA,MAC4DC,cAD5D,GACkKT,KADlK,CAC4DS,cAD5D;EAAA,MAC4EC,aAD5E,GACkKV,KADlK,CAC4EU,aAD5E;EAAA,MAC2FC,WAD3F,GACkKX,KADlK,CAC2FW,WAD3F;EAAA,MACwGC,YADxG,GACkKZ,KADlK,CACwGY,YADxG;EAAA,MACsHC,cADtH,GACkKb,KADlK,CACsHa,cADtH;EAAA,MACsIC,WADtI,GACkKd,KADlK,CACsIc,WADtI;EAAA,MACmJC,SADnJ,GACkKf,KADlK,CACmJe,SADnJ;EAErC,MAAMC,oBAAoB,GAAGC,YAAM,CAAC,IAAD,CAAnC;EACA,MAAMC,kBAAkB,GAAGD,YAAM,CAAC,IAAD,CAAjC;EACA;;;;;;EAKA;;;;;EAIA,MAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;EACf,QAAIH,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BD,IAA7B;EACH;EACJ,GAJD;EAKA;;;;;;EAIA,MAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;EACf,QAAIL,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BC,IAA7B;EACH;EACJ,GAJD;EAKA;;;;;;EAIA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;EAChB,QAAIN,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BE,KAA7B;EACH;EACJ,GAJD;EAKA;;;;;;;EAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;EACxB,QAAIR,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BG,QAA7B,CAAsCC,KAAtC;EACH;EACJ,GAJD;EAKA;;;;;;;;EAMA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,OAAR,EAAoB;EACpC,QAAIX,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BK,WAA7B,CAAyCC,KAAzC,EAAgDC,OAAhD;EACH;EACJ,GAJD;EAKA;;;;;;;;EAMA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD,EAAQC,OAAR,EAAoB;EACpC,QAAIX,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BQ,WAA7B,CAAyCF,KAAzC,EAAgDC,OAAhD;EACH;EACJ,GAJD;EAKA;;;;;;;EAKA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAe;EAChC,QAAId,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BS,YAA7B,CAA0CC,SAA1C;EACH;EACJ,GAJD;EAKA;;;;;;;;EAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAUC,KAAV,EAAoB;EACrC,QAAIjB,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BW,YAA7B,CAA0CC,OAA1C,EAAmDC,KAAnD;EACH;EACJ,GAJD;EAKA;;;;;;;EAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,YAAD,EAAkB;EAClC,QAAInB,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6Bc,WAA7B,CAAyCC,YAAzC;EACH;EACJ,GAJD;EAKA;;;;;;EAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EAClB,QAAIpB,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BgB,OAA7B;EACH;EACJ,GAJD;EAKA;;;;;;;EAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;EAC9B,QAAItB,oBAAoB,CAACI,OAAzB,EAAkC;EAC9B,aAAOJ,oBAAoB,CAACI,OAArB,CAA6BiB,WAA7B,CAAyCC,QAAzC,CAAP;EACH;;EACD,WAAOC,SAAP;EACH,GALD;EAMA;;;;;;EAKA;;;;;;EAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAuB;EAAA,QAAtBC,YAAsB,uEAAP,EAAO;;EACzC,QAAIzB,oBAAoB,CAACI,OAAzB,EAAkC;EAC9BJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BgB,OAA7B;EACH;;EACD,QAAMM,MAAM;EACRxC,MAAAA,aAAa,EAAEA,aAAa,IAAI,IADxB;EAERC,MAAAA,IAAI,EAAE,CAACwC,MAAM,CAACC,KAAP,CAAazC,IAAb,CAAD,GAAsBA,IAAtB,GAA6BA,IAAI,KAAK,KAFpC;EAGRC,MAAAA,QAAQ,EAAEA,QAAQ,KAAK,KAHf;EAIRC,MAAAA,cAAc,EAAEA,cAAc,IAAI;EAJ1B,OAKLL,KALK,GAMLyC,YANK;EAORI,MAAAA,SAAS,EAAE3B,kBAAkB,CAACE;EAPtB,MAAZ;;EASAJ,IAAAA,oBAAoB,CAACI,OAArB,GAA+B0B,MAAM,CAACN,aAAP,CAAqBE,MAArB,CAA/B;EACH,GAdD;EAeA;;;;;EAGAK,EAAAA,eAAS,CAAC,YAAM;EACZP,IAAAA,aAAa;EAChB,GAFQ,EAEN,CAACtC,aAAD,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,cAAhC,CAFM,CAAT;EAGA;;;;;;EAKA;;;;;;;;EAOA,MAAM2C,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,SAAD,EAAYC,YAAZ,EAA8D;EAAA,QAApCC,uBAAoC,uEAAV,KAAU;;EACzF,QAAInC,oBAAoB,CAACI,OAAzB,EAAkC;EAC9B,UAAI+B,uBAAJ,EAA6B;EACzBnC,QAAAA,oBAAoB,CAACI,OAArB,CAA6BgC,mBAA7B,CAAiDH,SAAjD;EACH;;EACD,UAAIA,SAAS,IAAIC,YAAjB,EAA+B;EAC3BlC,QAAAA,oBAAoB,CAACI,OAArB,CAA6BiC,gBAA7B,CAA8CJ,SAA9C,EAAyDC,YAAzD,EAD2B;;EAG3B,eAAO,YAAM;EACT;EACAlC,UAAAA,oBAAoB,CAACI,OAArB,CAA6BgC,mBAA7B,CAAiDH,SAAjD,EAA4DC,YAA5D;EACH,SAHD;EAIH;EACJ;;EACD,WAAO,YAAM,EAAb;EACH,GAfD;EAgBA;;;;;EAGAH,EAAAA,eAAS,CAAC,YAAM;EACZ,QAAMO,SAAS,GAAG,CACd;EAAEC,MAAAA,IAAI,EAAE,UAAR;EAAoBC,MAAAA,OAAO,EAAElD;EAA7B,KADc,EAEd;EAAEiD,MAAAA,IAAI,EAAE,cAAR;EAAwBC,MAAAA,OAAO,EAAEjD;EAAjC,KAFc,EAGd;EAAEgD,MAAAA,IAAI,EAAE,YAAR;EAAsBC,MAAAA,OAAO,EAAEhD;EAA/B,KAHc,EAId;EAAE+C,MAAAA,IAAI,EAAE,cAAR;EAAwBC,MAAAA,OAAO,EAAE/C;EAAjC,KAJc,EAKd;EAAE8C,MAAAA,IAAI,EAAE,cAAR;EAAwBC,MAAAA,OAAO,EAAE9C;EAAjC,KALc,EAMd;EAAE6C,MAAAA,IAAI,EAAE,YAAR;EAAsBC,MAAAA,OAAO,EAAE7C;EAA/B,KANc,EAOd;EAAE4C,MAAAA,IAAI,EAAE,aAAR;EAAuBC,MAAAA,OAAO,EAAE5C;EAAhC,KAPc,EAQd;EAAE2C,MAAAA,IAAI,EAAE,eAAR;EAAyBC,MAAAA,OAAO,EAAE3C;EAAlC,KARc,EASd;EAAE0C,MAAAA,IAAI,EAAE,WAAR;EAAqBC,MAAAA,OAAO,EAAE1C;EAA9B,KATc,EAUd;EAAEyC,MAAAA,IAAI,EAAE,SAAR;EAAmBC,MAAAA,OAAO,EAAEzC;EAA5B,KAVc,CAAlB;EAYA,QAAM0C,cAAc,GAAGH,SAAS,CAACI,GAAV,CAAc,UAACC,KAAD;EAAA,aAAWX,sBAAsB,CAACW,KAAK,CAACJ,IAAP,EAAaI,KAAK,CAACH,OAAnB,CAAjC;EAAA,KAAd,CAAvB,CAbY;;EAeZ,WAAO,YAAM;EACTC,MAAAA,cAAc,CAACG,OAAf,CAAuB,UAACC,UAAD;EAAA,eAAgBA,UAAU,EAA1B;EAAA,OAAvB;EACH,KAFD;EAGH,GAlBQ,EAkBN,CACCvD,UADD,EAECC,cAFD,EAGCC,YAHD,EAICC,cAJD,EAKCC,aALD,EAMCC,WAND,EAOCC,YAPD,EAQCC,cARD,EASCC,WATD,EAUCC,SAVD,CAlBM,CAAT;EA8BA;;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;;;;EAGA,MAAM+C,IAAI,gBAAGC;EAAK,IAAA,KAAK,EAAE9D,KAAZ;EAAmB,IAAA,GAAG,EAAEiB;EAAxB,IAAb;EACA,SAAO;EACH4C,IAAAA,IAAI,EAAJA,IADG;EAEH3C,IAAAA,IAAI,EAAJA,IAFG;EAGHE,IAAAA,IAAI,EAAJA,IAHG;EAIHC,IAAAA,KAAK,EAALA,KAJG;EAKHC,IAAAA,QAAQ,EAARA,QALG;EAMHK,IAAAA,WAAW,EAAXA,WANG;EAOHH,IAAAA,WAAW,EAAXA,WAPG;EAQHI,IAAAA,YAAY,EAAZA,YARG;EASHE,IAAAA,YAAY,EAAZA,YATG;EAUHG,IAAAA,WAAW,EAAXA,WAVG;EAWHE,IAAAA,OAAO,EAAPA,OAXG;EAYHC,IAAAA,WAAW,EAAXA;EAZG,GAAP;EAcH;;MClPK2B,MAAM,GAAGC,gBAAU,CAAC,UAACjE,KAAD,EAAQkE,GAAR,EAAgB;EAAA,MAC9BjE,KAD8B,GACJD,KADI,CAC9BC,KAD8B;EAAA,MACpBkE,WADoB,4BACJnE,KADI;;EAEtC,MAAMoE,SAAS,GAAGF,GAAG,IAAIjD,YAAM,EAA/B;EACA;;;;EAHsC,mBAMkGlB,SAAS,CAACoE,WAAD,EAAclE,KAAd,CAN3G;EAAA,MAM9B6D,IAN8B,cAM9BA,IAN8B;EAAA,MAMxB3C,IANwB,cAMxBA,IANwB;EAAA,MAMlBE,IANkB,cAMlBA,IANkB;EAAA,MAMZC,KANY,cAMZA,KANY;EAAA,MAMLC,QANK,cAMLA,QANK;EAAA,MAMKK,WANL,cAMKA,WANL;EAAA,MAMkBH,WANlB,cAMkBA,WANlB;EAAA,MAM+BI,YAN/B,cAM+BA,YAN/B;EAAA,MAM6CE,YAN7C,cAM6CA,YAN7C;EAAA,MAM2DG,WAN3D,cAM2DA,WAN3D;EAAA,MAMwEE,OANxE,cAMwEA,OANxE;EAAA,MAMiFC,WANjF,cAMiFA,WANjF;EAOtC;;;;;EAGAU,EAAAA,eAAS,CAAC,YAAM;EACZ,QAAIqB,SAAJ,EAAe;EACXA,MAAAA,SAAS,CAAChD,OAAV,GAAoB;EAChBD,QAAAA,IAAI,EAAJA,IADgB;EAEhBE,QAAAA,IAAI,EAAJA,IAFgB;EAGhBC,QAAAA,KAAK,EAALA,KAHgB;EAIhBC,QAAAA,QAAQ,EAARA,QAJgB;EAKhBE,QAAAA,WAAW,EAAXA,WALgB;EAMhBG,QAAAA,WAAW,EAAXA,WANgB;EAOhBC,QAAAA,YAAY,EAAZA,YAPgB;EAQhBE,QAAAA,YAAY,EAAZA,YARgB;EAShBG,QAAAA,WAAW,EAAXA,WATgB;EAUhBE,QAAAA,OAAO,EAAPA,OAVgB;EAWhBC,QAAAA,WAAW,EAAXA;EAXgB,OAApB;EAaH;EACJ,GAhBQ,EAgBN,CAAC+B,SAAS,CAAChD,OAAX,CAhBM,CAAT;EAiBA,SAAO0C,IAAP;EACH,CA5BwB;EA6BzBE,MAAM,CAACK,SAAP,GAAmB;EACfnE,EAAAA,aAAa,EAAEoE,SAAS,CAACC,KAAV,CAAgBhC,SAAhB,EAA2BiC,UAD3B;EAEfrE,EAAAA,IAAI,EAAEmE,SAAS,CAACG,SAAV,CAAoB,CAACH,SAAS,CAACI,IAAX,EAAiBJ,SAAS,CAACK,MAA3B,CAApB,CAFS;EAGfvE,EAAAA,QAAQ,EAAEkE,SAAS,CAACI,IAHL;EAIfrE,EAAAA,cAAc,EAAEiE,SAAS,CAACM,OAAV,CAAkBN,SAAS,CAACC,KAAV,CAAgBD,SAAS,CAACK,MAAV,CAAiBH,UAAjC,CAAlB,CAJD;EAKflE,EAAAA,UAAU,EAAEgE,SAAS,CAACO,IALP;EAMftE,EAAAA,cAAc,EAAE+D,SAAS,CAACO,IANX;EAOfrE,EAAAA,YAAY,EAAE8D,SAAS,CAACO,IAPT;EAQfpE,EAAAA,cAAc,EAAE6D,SAAS,CAACO,IARX;EASfnE,EAAAA,aAAa,EAAE4D,SAAS,CAACO,IATV;EAUflE,EAAAA,WAAW,EAAE2D,SAAS,CAACO,IAVR;EAWfjE,EAAAA,YAAY,EAAE0D,SAAS,CAACO,IAXT;EAYfhE,EAAAA,cAAc,EAAEyD,SAAS,CAACO,IAZX;EAaf/D,EAAAA,WAAW,EAAEwD,SAAS,CAACO,IAbR;EAcf9D,EAAAA,SAAS,EAAEuD,SAAS,CAACO,IAdN;EAef5E,EAAAA,KAAK,EAAEqE,SAAS,CAACC,KAAV,CAAgBhC,SAAhB;EAfQ,CAAnB;EAiBAyB,MAAM,CAACc,YAAP,GAAsB;EAClB3E,EAAAA,IAAI,EAAE,IADY;EAElBC,EAAAA,QAAQ,EAAE,IAFQ;EAGlBC,EAAAA,cAAc,EAAE,IAHE;EAIlBC,EAAAA,UAAU,EAAE,IAJM;EAKlBC,EAAAA,cAAc,EAAE,IALE;EAMlBC,EAAAA,YAAY,EAAE,IANI;EAOlBC,EAAAA,cAAc,EAAE,IAPE;EAQlBC,EAAAA,aAAa,EAAE,IARG;EASlBC,EAAAA,WAAW,EAAE,IATK;EAUlBC,EAAAA,YAAY,EAAE,IAVI;EAWlBC,EAAAA,cAAc,EAAE,IAXE;EAYlBC,EAAAA,WAAW,EAAE,IAZK;EAalBC,EAAAA,SAAS,EAAE,IAbO;EAclBd,EAAAA,KAAK,EAAE;EAdW,CAAtB;;MC9Ca8E,QAAQ,GAAGf;MACXgB,WAAW,GAAGjF;;;;;;;;;;;;;;;"}