{"version":3,"file":"index.umd.js","sources":["compiled/components/Animator.js","compiled/hooks/useAnimator.js","compiled/index.js"],"sourcesContent":["import React, { forwardRef, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Lottie from \"lottie-web\";\nconst Animator = forwardRef((props, ref) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, style, } = props;\n    const animationContainer = useRef(null);\n    const animationInstanceRef = useRef(null);\n    const parentRef = ref || useRef();\n    /*\n        ======================================\n            INTERACTION METHODS\n        ======================================\n     */\n    /**\n     * Play\n     * TODO: complete\n     */\n    const play = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.play();\n        }\n    };\n    /**\n     * Stop\n     * TODO: complete\n     */\n    const stop = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.stop();\n        }\n    };\n    /**\n     * Pause\n     * TODO: complete\n     */\n    const pause = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.pause();\n        }\n    };\n    /**\n     * Set animation speed\n     * TODO: complete\n     * @param speed\n     */\n    const setSpeed = speed => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSpeed(speed);\n        }\n    };\n    /**\n     * Got to frame and play\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndPlay(value, isFrame);\n        }\n    };\n    /**\n     * Got to frame and stop\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndStop(value, isFrame);\n        }\n    };\n    /**\n     * Set animation direction\n     * TODO: complete\n     * @param direction\n     */\n    const setDirection = direction => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setDirection(direction);\n        }\n    };\n    /**\n     * Play animation segments\n     * TODO: complete\n     * @param segment\n     * @param force\n     */\n    const playSegments = (segment, force) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.playSegments(segment, force);\n        }\n    };\n    /**\n     * Set sub frames\n     * TODO: complete\n     * @param useSubFrames\n     */\n    const setSubframe = useSubFrames => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSubframe(useSubFrames);\n        }\n    };\n    /**\n     * Destroy animation\n     * TODO: complete\n     */\n    const destroy = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n    };\n    /**\n     * Get animation duration\n     * TODO: complete\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => {\n        if (animationInstanceRef.current) {\n            return animationInstanceRef.current.getDuration(inFrames);\n        }\n        return undefined;\n    };\n    /*\n        ======================================\n            LOTTIE\n        ======================================\n     */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forceOptions\n     */\n    const loadAnimation = (forceOptions = {}) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n        const config = Object.assign(Object.assign({ animationData: animationData || null, loop: !Number.isNaN(loop) ? loop : loop !== false, autoplay: autoplay !== false, initialSegment: initialSegment || null }, forceOptions), { container: animationContainer.current });\n        animationInstanceRef.current = Lottie.loadAnimation(config);\n        // Share methods which control Lottie to the parent component\n        if (parentRef) {\n            parentRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                destroy,\n                getDuration,\n            };\n        }\n    };\n    // Initialize and listen for changes that need to reinitialize Lottie\n    useEffect(() => {\n        loadAnimation();\n    }, [animationData, loop, autoplay, initialSegment]);\n    /*\n        ======================================\n            EVENTS\n        ======================================\n     */\n    /**\n     * Handle the process of adding an event listener\n     * @param {String} eventName\n     * @param {Function} eventHandler\n     * @param {Boolean} removePreviousListeners\n     * @return {Function} Function that deregister the listener\n     */\n    const addEventListenerHelper = (eventName, eventHandler, removePreviousListeners = false) => {\n        if (animationInstanceRef.current) {\n            if (removePreviousListeners) {\n                animationInstanceRef.current.removeEventListener(eventName);\n            }\n            if (eventName && eventHandler) {\n                animationInstanceRef.current.addEventListener(eventName, eventHandler);\n                // Return a function to deregister the event\n                return () => {\n                    // TODO: Should we remove all the listeners?\n                    animationInstanceRef.current.removeEventListener(eventName, eventHandler);\n                };\n            }\n        }\n        return () => { };\n    };\n    useEffect(() => {\n        const listeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const deregisterList = listeners.map(event => addEventListenerHelper(event.name, event.handler));\n        // Deregister events on unmount\n        return () => {\n            deregisterList.forEach(deregister => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * ALPHA\n     */\n    // Detect changes of the loop param and change it without reloading the animation\n    // TODO: needs intensive testing\n    // useEffect(() => {\n    // \tif (animationInstanceRef.current.loop !== loop) {\n    // \t\tanimationInstanceRef.current.loop = loop;\n    // \t}\n    //\n    // \t// // TODO: decide if this is a desired behavior\n    // \t// if (animationInstanceRef.current.isPaused) {\n    // \t// \tanimationInstanceRef.current.play();\n    // \t// }\n    // }, [loop]);\n    return <div ref={animationContainer} style={style}/>;\n});\nAnimator.propTypes = {\n    animationData: PropTypes.shape(undefined).isRequired,\n    loop: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    autoplay: PropTypes.bool,\n    initialSegment: PropTypes.arrayOf(PropTypes.shape(PropTypes.number.isRequired)),\n    onComplete: PropTypes.func,\n    onLoopComplete: PropTypes.func,\n    onEnterFrame: PropTypes.func,\n    onSegmentStart: PropTypes.func,\n    onConfigReady: PropTypes.func,\n    onDataReady: PropTypes.func,\n    onDataFailed: PropTypes.func,\n    onLoadedImages: PropTypes.func,\n    onDOMLoaded: PropTypes.func,\n    onDestroy: PropTypes.func,\n    style: PropTypes.shape(undefined),\n};\nAnimator.defaultProps = {\n    loop: true,\n    autoplay: true,\n    initialSegment: null,\n    onComplete: null,\n    onLoopComplete: null,\n    onEnterFrame: null,\n    onSegmentStart: null,\n    onConfigReady: null,\n    onDataReady: null,\n    onDataFailed: null,\n    onLoadedImages: null,\n    onDOMLoaded: null,\n    onDestroy: null,\n    style: null,\n};\nexport default Animator;\n","import React, { useEffect, useRef } from \"react\";\nimport Lottie from \"lottie-web\";\nconst useAnimator = (props, style = {}) => {\n    const animationInstanceRef = useRef(null);\n    const animationContainer = useRef(null);\n    // Initialize Lottie\n    useEffect(() => {\n        animationInstanceRef.current = Lottie.loadAnimation(Object.assign(Object.assign({}, props), { container: animationContainer.current }));\n        // eslint-disable-next-line\n    }, []);\n    /**\n     * Play\n     * TODO: complete\n     */\n    const play = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.play();\n        }\n    };\n    /**\n     * Stop\n     * TODO: complete\n     */\n    const stop = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.stop();\n        }\n    };\n    /**\n     * Pause\n     * TODO: complete\n     */\n    const pause = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.pause();\n        }\n    };\n    /**\n     * Set animation speed\n     * TODO: complete\n     * @param speed\n     */\n    const setSpeed = speed => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSpeed(speed);\n        }\n    };\n    /**\n     * Got to frame and stop\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndStop(value, isFrame);\n        }\n    };\n    /**\n     * Got to frame and play\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndPlay(value, isFrame);\n        }\n    };\n    /**\n     * Set animation direction\n     * TODO: complete\n     * @param direction\n     */\n    const setDirection = direction => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setDirection(direction);\n        }\n    };\n    /**\n     * Play animation segments\n     * TODO: complete\n     * @param segment\n     * @param force\n     */\n    const playSegments = (segment, force) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.playSegments(segment, force);\n        }\n    };\n    /**\n     * Set sub frames\n     * TODO: complete\n     * @param useSubFrames\n     */\n    const setSubframe = useSubFrames => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSubframe(useSubFrames);\n        }\n    };\n    /**\n     * Destroy animation\n     * TODO: complete\n     */\n    const destroy = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n    };\n    /**\n     * Get animation duration\n     * TODO: complete\n     * @param inFrames\n     */\n    const getDuration = inFrames => {\n        if (animationInstanceRef.current) {\n            return animationInstanceRef.current.getDuration(inFrames);\n        }\n        return undefined;\n    };\n    // Build the animation view\n    const View = <div style={style} ref={animationContainer}/>;\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        destroy,\n        getDuration,\n    };\n};\nexport default useAnimator;\n","import Animator from \"./components/Animator\";\nimport useAnimator from \"./hooks/useAnimator\";\nexport default {\n    Animator,\n    useAnimator,\n};\n"],"names":["Animator","forwardRef","props","ref","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","style","animationContainer","useRef","animationInstanceRef","parentRef","play","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segment","force","setSubframe","useSubFrames","destroy","getDuration","inFrames","undefined","loadAnimation","forceOptions","config","Object","assign","Number","isNaN","container","Lottie","useEffect","addEventListenerHelper","eventName","eventHandler","removePreviousListeners","removeEventListener","addEventListener","listeners","name","handler","deregisterList","map","event","forEach","deregister","React","propTypes","PropTypes","shape","isRequired","oneOfType","bool","number","arrayOf","func","defaultProps","useAnimator","View"],"mappings":"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"}