{"version":3,"file":"index.js","sources":["compiled/components/Animator.js","compiled/hooks/useAnimator.js","compiled/index.js"],"sourcesContent":["import React, { forwardRef, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Lottie from \"lottie-web\";\nconst Animator = forwardRef((props, ref) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, style, } = props;\n    const animationContainer = useRef(null);\n    const animationInstanceRef = useRef(null);\n    const parentRef = ref || useRef();\n    /*\n        ======================================\n            INTERACTION METHODS\n        ======================================\n     */\n    /**\n     * Play\n     * TODO: complete\n     */\n    const play = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.play();\n        }\n    };\n    /**\n     * Stop\n     * TODO: complete\n     */\n    const stop = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.stop();\n        }\n    };\n    /**\n     * Pause\n     * TODO: complete\n     */\n    const pause = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.pause();\n        }\n    };\n    /**\n     * Set animation speed\n     * TODO: complete\n     * @param speed\n     */\n    const setSpeed = speed => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSpeed(speed);\n        }\n    };\n    /**\n     * Got to frame and play\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndPlay(value, isFrame);\n        }\n    };\n    /**\n     * Got to frame and stop\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndStop(value, isFrame);\n        }\n    };\n    /**\n     * Set animation direction\n     * TODO: complete\n     * @param direction\n     */\n    const setDirection = direction => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setDirection(direction);\n        }\n    };\n    /**\n     * Play animation segments\n     * TODO: complete\n     * @param segment\n     * @param force\n     */\n    const playSegments = (segment, force) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.playSegments(segment, force);\n        }\n    };\n    /**\n     * Set sub frames\n     * TODO: complete\n     * @param useSubFrames\n     */\n    const setSubframe = useSubFrames => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSubframe(useSubFrames);\n        }\n    };\n    /**\n     * Destroy animation\n     * TODO: complete\n     */\n    const destroy = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n    };\n    /**\n     * Get animation duration\n     * TODO: complete\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => {\n        if (animationInstanceRef.current) {\n            return animationInstanceRef.current.getDuration(inFrames);\n        }\n        return undefined;\n    };\n    /*\n        ======================================\n            LOTTIE\n        ======================================\n     */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forceOptions\n     */\n    const loadAnimation = (forceOptions = {}) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n        const config = Object.assign(Object.assign({ animationData: animationData || null, loop: !Number.isNaN(loop) ? loop : loop !== false, autoplay: autoplay !== false, initialSegment: initialSegment || null }, forceOptions), { container: animationContainer.current });\n        animationInstanceRef.current = Lottie.loadAnimation(config);\n        // Share methods which control Lottie to the parent component\n        if (parentRef) {\n            parentRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                destroy,\n                getDuration,\n            };\n        }\n    };\n    // Initialize and listen for changes that need to reinitialize Lottie\n    useEffect(() => {\n        loadAnimation();\n    }, [animationData, loop, autoplay, initialSegment]);\n    /*\n        ======================================\n            EVENTS\n        ======================================\n     */\n    /**\n     * Handle the process of adding an event listener\n     * @param {String} eventName\n     * @param {Function} eventHandler\n     * @param {Boolean} removePreviousListeners\n     * @return {Function} Function that deregister the listener\n     */\n    const addEventListenerHelper = (eventName, eventHandler, removePreviousListeners = false) => {\n        if (animationInstanceRef.current) {\n            if (removePreviousListeners) {\n                animationInstanceRef.current.removeEventListener(eventName);\n            }\n            if (eventName && eventHandler) {\n                animationInstanceRef.current.addEventListener(eventName, eventHandler);\n                // Return a function to deregister the event\n                return () => {\n                    // TODO: Should we remove all the listeners?\n                    animationInstanceRef.current.removeEventListener(eventName, eventHandler);\n                };\n            }\n        }\n        return () => { };\n    };\n    useEffect(() => {\n        const listeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const deregisterList = listeners.map(event => addEventListenerHelper(event.name, event.handler));\n        // Deregister events on unmount\n        return () => {\n            deregisterList.forEach(deregister => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * ALPHA\n     */\n    // Detect changes of the loop param and change it without reloading the animation\n    // TODO: needs intensive testing\n    // useEffect(() => {\n    // \tif (animationInstanceRef.current.loop !== loop) {\n    // \t\tanimationInstanceRef.current.loop = loop;\n    // \t}\n    //\n    // \t// // TODO: decide if this is a desired behavior\n    // \t// if (animationInstanceRef.current.isPaused) {\n    // \t// \tanimationInstanceRef.current.play();\n    // \t// }\n    // }, [loop]);\n    return <div ref={animationContainer} style={style}/>;\n});\nAnimator.propTypes = {\n    animationData: PropTypes.shape(undefined).isRequired,\n    loop: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    autoplay: PropTypes.bool,\n    initialSegment: PropTypes.arrayOf(PropTypes.shape(PropTypes.number.isRequired)),\n    onComplete: PropTypes.func,\n    onLoopComplete: PropTypes.func,\n    onEnterFrame: PropTypes.func,\n    onSegmentStart: PropTypes.func,\n    onConfigReady: PropTypes.func,\n    onDataReady: PropTypes.func,\n    onDataFailed: PropTypes.func,\n    onLoadedImages: PropTypes.func,\n    onDOMLoaded: PropTypes.func,\n    onDestroy: PropTypes.func,\n    style: PropTypes.shape(undefined),\n};\nAnimator.defaultProps = {\n    loop: true,\n    autoplay: true,\n    initialSegment: null,\n    onComplete: null,\n    onLoopComplete: null,\n    onEnterFrame: null,\n    onSegmentStart: null,\n    onConfigReady: null,\n    onDataReady: null,\n    onDataFailed: null,\n    onLoadedImages: null,\n    onDOMLoaded: null,\n    onDestroy: null,\n    style: null,\n};\nexport default Animator;\n","import React, { useEffect, useRef } from \"react\";\nimport Lottie from \"lottie-web\";\nconst useAnimator = (props, style = {}) => {\n    const animationInstanceRef = useRef(null);\n    const animationContainer = useRef(null);\n    // Initialize Lottie\n    useEffect(() => {\n        animationInstanceRef.current = Lottie.loadAnimation(Object.assign(Object.assign({}, props), { container: animationContainer.current }));\n        // eslint-disable-next-line\n    }, []);\n    /**\n     * Play\n     * TODO: complete\n     */\n    const play = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.play();\n        }\n    };\n    /**\n     * Stop\n     * TODO: complete\n     */\n    const stop = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.stop();\n        }\n    };\n    /**\n     * Pause\n     * TODO: complete\n     */\n    const pause = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.pause();\n        }\n    };\n    /**\n     * Set animation speed\n     * TODO: complete\n     * @param speed\n     */\n    const setSpeed = speed => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSpeed(speed);\n        }\n    };\n    /**\n     * Got to frame and stop\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndStop(value, isFrame);\n        }\n    };\n    /**\n     * Got to frame and play\n     * TODO: complete\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.goToAndPlay(value, isFrame);\n        }\n    };\n    /**\n     * Set animation direction\n     * TODO: complete\n     * @param direction\n     */\n    const setDirection = direction => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setDirection(direction);\n        }\n    };\n    /**\n     * Play animation segments\n     * TODO: complete\n     * @param segment\n     * @param force\n     */\n    const playSegments = (segment, force) => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.playSegments(segment, force);\n        }\n    };\n    /**\n     * Set sub frames\n     * TODO: complete\n     * @param useSubFrames\n     */\n    const setSubframe = useSubFrames => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.setSubframe(useSubFrames);\n        }\n    };\n    /**\n     * Destroy animation\n     * TODO: complete\n     */\n    const destroy = () => {\n        if (animationInstanceRef.current) {\n            animationInstanceRef.current.destroy();\n        }\n    };\n    /**\n     * Get animation duration\n     * TODO: complete\n     * @param inFrames\n     */\n    const getDuration = inFrames => {\n        if (animationInstanceRef.current) {\n            return animationInstanceRef.current.getDuration(inFrames);\n        }\n        return undefined;\n    };\n    // Build the animation view\n    const View = <div style={style} ref={animationContainer}/>;\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        destroy,\n        getDuration,\n    };\n};\nexport default useAnimator;\n","import Animator from \"./components/Animator\";\nimport useAnimator from \"./hooks/useAnimator\";\nexport default {\n    Animator,\n    useAnimator,\n};\n"],"names":["Animator","forwardRef","props","ref","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","style","animationContainer","useRef","animationInstanceRef","parentRef","play","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segment","force","setSubframe","useSubFrames","destroy","getDuration","inFrames","undefined","loadAnimation","forceOptions","config","Object","assign","Number","isNaN","container","Lottie","useEffect","addEventListenerHelper","eventName","eventHandler","removePreviousListeners","removeEventListener","addEventListener","listeners","name","handler","deregisterList","map","event","forEach","deregister","React","propTypes","PropTypes","shape","isRequired","oneOfType","bool","number","arrayOf","func","defaultProps","useAnimator","View"],"mappings":"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"}